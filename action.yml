name: 'Egal Release Notify'
description: 'Sending a Telegram message about release.'
inputs:
  repository_name:
    description: 'Repository name'
    required: true
  release_json:
    description: 'Github Event Release as JSON'
    required: true
  telegram_channel_id:
    description: 'Telegram channel ID'
    required: true
  telegram_token:
    description: 'Telegram Token'
    required: true
runs:
  using: 'composite'
  steps:
    - shell: bash
      run: echo "${{ fromJson(inputs.release_json).body }}" > body.md
    - uses: docker://pandoc/latex:2.9
      with:
        args: --output=body.html body.md
    - id: body-convertor
      shell: bash
      run: |
        echo "${{ fromJson(inputs.release_json).body }}";
        echo "------------------------------------";
        cat body.html;
        echo "------------------------------------";
        echo "::set-output name=html::$(sed -e 's/<[(p\/p)^>]*>//g' -e 's/<[(ul\/ul)^>]*>//g' -e 's/<li./- /g' -e 's/<\/li>//g' -e 's/<h./<b/g' -e 's/<\/h.>/<\/b>/g' body.html)";
        echo "------------------------------------";
        echo ${{ steps.body-convertor.outputs.html }};
    - id: message
      shell: bash
      run: |
        message="";
        message="${message}&#9898 New release of <b>${{ inputs.repository_name }}</b>: <b><a href="${{ fromJson(inputs.release_json).html_url }}">${{ fromJson(inputs.release_json).name }}</a></b>";
        message="${message}\n\n${{ steps.body-convertor.outputs.html }}"
        echo "::set-output name=body::${message}"
    - name: Send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ inputs.telegram_channel_id }}
        token: ${{ inputs.telegram_token }}
        format: html
        message: ${{ steps.body-convertor.message.body }}



